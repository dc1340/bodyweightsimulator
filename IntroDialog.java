/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IntroDialog.java
 *
 * Created on Jul 27, 2010, 3:19:36 PM
 */

package weightapplet;

import weightapplet.MainPanel;
import weightapplet.*;

/**
 *
 * @author Dhruva
 */


public class IntroDialog extends javax.swing.JDialog {

    MainPanel mpanel;
    private double initweight;
    private double initheight;
    private boolean initmale;
    /** Creates new form IntroDialog */
    public IntroDialog(java.awt.Frame parent, boolean modal, MainPanel mpanel) {
        super(parent, modal);
        this.mpanel=mpanel;
        initComponents();
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        InitialWeightLabel = new javax.swing.JLabel();
        PoundsRadio = new javax.swing.JRadioButton();
        KilogramsRadio = new javax.swing.JRadioButton();
        InitialWeightField = new javax.swing.JFormattedTextField();
        AgeLabel = new javax.swing.JLabel();
        AgeField = new javax.swing.JFormattedTextField();
        HeightLabel = new javax.swing.JLabel();
        HeightField = new javax.swing.JFormattedTextField();
        InchesRadio = new javax.swing.JRadioButton();
        CentimetersRadio = new javax.swing.JRadioButton();
        GenderBox = new javax.swing.JComboBox();
        PALLabel = new javax.swing.JLabel();
        EstimatePALButton = new javax.swing.JButton();
        BaselineLabel = new javax.swing.JLabel();
        QuickStartButton = new javax.swing.JButton();
        PALSpinner = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        InitialWeightLabel.setText("Initial Weight");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(InitialWeightLabel, gridBagConstraints);

        PoundsRadio.setText("Pounds");
        PoundsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoundsRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(PoundsRadio, gridBagConstraints);

        KilogramsRadio.setSelected(true);
        KilogramsRadio.setText("Kilograms");
        KilogramsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KilogramsRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(KilogramsRadio, gridBagConstraints);

        InitialWeightField.setColumns(3);
        InitialWeightField.setValue(mpanel.getBaseline().getWeight_kgs());
        InitialWeightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InitialWeightFieldActionPerformed(evt);
            }
        });
        InitialWeightField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                InitialWeightFieldPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(InitialWeightField, gridBagConstraints);

        AgeLabel.setText("Age (years)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(AgeLabel, gridBagConstraints);

        AgeField.setColumns(3);
        AgeField.setValue(mpanel.getBaseline().getAge());
        AgeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeFieldActionPerformed(evt);
            }
        });
        AgeField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                AgeFieldPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(AgeField, gridBagConstraints);

        HeightLabel.setText("Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(HeightLabel, gridBagConstraints);

        HeightField.setColumns(3);
        HeightField.setValue(mpanel.getBaseline().getHeight_cms());
        HeightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightFieldActionPerformed(evt);
            }
        });
        HeightField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                HeightFieldPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(HeightField, gridBagConstraints);

        InchesRadio.setText("Inches");
        InchesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InchesRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(InchesRadio, gridBagConstraints);

        CentimetersRadio.setSelected(true);
        CentimetersRadio.setText("Centimeters");
        CentimetersRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CentimetersRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(CentimetersRadio, gridBagConstraints);

        GenderBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        GenderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(GenderBox, gridBagConstraints);

        PALLabel.setText("Physical Activity Level");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(PALLabel, gridBagConstraints);

        EstimatePALButton.setText("Estimate Activity Level");
        EstimatePALButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstimatePALButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(EstimatePALButton, gridBagConstraints);

        BaselineLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14));
        BaselineLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BaselineLabel.setText("Enter Baseline Information");
        BaselineLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        getContentPane().add(BaselineLabel, gridBagConstraints);

        QuickStartButton.setText("Quick Start");
        QuickStartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuickStartButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        getContentPane().add(QuickStartButton, gridBagConstraints);

        PALSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2.0", "2.1", "2.2", "2.3", "2.4"}));
        PALSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PALSpinnerStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(PALSpinner, gridBagConstraints);

        jButton1.setText("Guide Me");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jButton1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PoundsRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoundsRadioActionPerformed
        //mpanel.WeightUnitsChange();
}//GEN-LAST:event_PoundsRadioActionPerformed

    private void KilogramsRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KilogramsRadioActionPerformed
        //WeightUnitsChange();
}//GEN-LAST:event_KilogramsRadioActionPerformed

    private void InitialWeightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InitialWeightFieldActionPerformed
        System.out.println("ACTION EVENT NAME IS "+evt.getActionCommand());
        InitialWeightFieldChange();
}//GEN-LAST:event_InitialWeightFieldActionPerformed

    private void InitialWeightFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_InitialWeightFieldPropertyChange
        if (!evt.getPropertyName().equals("Frame.active")){
            InitialWeightFieldChange();
        }
}//GEN-LAST:event_InitialWeightFieldPropertyChange

    private void AgeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeFieldActionPerformed
        //AgeChange();
}//GEN-LAST:event_AgeFieldActionPerformed

    private void AgeFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_AgeFieldPropertyChange
        if (!evt.getPropertyName().equals("Frame.active")){
            //AgeChange();
        }
}//GEN-LAST:event_AgeFieldPropertyChange

    private void HeightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightFieldActionPerformed
        //HeightChange();
}//GEN-LAST:event_HeightFieldActionPerformed

    private void HeightFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_HeightFieldPropertyChange
        if (!evt.getPropertyName().equals("Frame.active")){
            //HeightChange();
        }
}//GEN-LAST:event_HeightFieldPropertyChange

    private void InchesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InchesRadioActionPerformed
        //HeightUnitsChange();
}//GEN-LAST:event_InchesRadioActionPerformed

    private void CentimetersRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CentimetersRadioActionPerformed
        //HeightUnitsChange();
}//GEN-LAST:event_CentimetersRadioActionPerformed

    private void GenderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderBoxActionPerformed
        if (GenderBox.getSelectedItem().toString().equals("Male")){
            mpanel.getBaseline().setMale(true);
        }else{
            mpanel.getBaseline().setMale(false);
        }
        
}//GEN-LAST:event_GenderBoxActionPerformed

    private void EstimatePALButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstimatePALButtonActionPerformed
        mpanel.getPAL_Dialog().setVisible(true);
        //recalc();

    }//GEN-LAST:event_EstimatePALButtonActionPerformed

    private void PALSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PALSpinnerStateChanged
        try{
            
                
                mpanel.getBaseline().setPAL(Double.parseDouble(PALSpinner.getValue().toString()));
                
            


        }catch (Exception e){
            System.out.println("Spinner failed to parse");
        }
    }//GEN-LAST:event_PALSpinnerStateChanged

    private void QuickStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuickStartButtonActionPerformed
        //mpanel.syncbase();
        mpanel.getBaseline().print();
        remove(mpanel.getBaselinePanel());
        mpanel.add(mpanel.getBaselinePanel());
        setVisible(false);
        
        //mpanel.getBaseline().setPAL(initPAL);
    }//GEN-LAST:event_QuickStartButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField AgeField;
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JLabel BaselineLabel;
    private javax.swing.JRadioButton CentimetersRadio;
    private javax.swing.JButton EstimatePALButton;
    private javax.swing.JComboBox GenderBox;
    private javax.swing.JFormattedTextField HeightField;
    private javax.swing.JLabel HeightLabel;
    private javax.swing.JRadioButton InchesRadio;
    private javax.swing.JFormattedTextField InitialWeightField;
    private javax.swing.JLabel InitialWeightLabel;
    private javax.swing.JRadioButton KilogramsRadio;
    private javax.swing.JLabel PALLabel;
    private javax.swing.JSpinner PALSpinner;
    private javax.swing.JRadioButton PoundsRadio;
    private javax.swing.JButton QuickStartButton;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

    private void InitialWeightFieldChange() {
        double check=Double.parseDouble(InitialWeightField.getValue().toString());
        if (check>0){
            mpanel.getBaseline().setWeight_kgs(initweight);
            System.out.println("baseline weight changed");
        }else{
            InitialWeightField.setValue(mpanel.getBaseline().getWeight_kgs());
        }
    }

}
